## Here you can customize the pattern renderer to your
## personal preferences. Some examples follow.
## Any entries which go in this file will override the ones
## defined internally in the pattern renderer.
## See local-operations.properties for a complete list of properties you can customize.

## Combination knitters may prefer to see a notation that is more accurate for their style of knitting.
## For instance, "tbl" (i.e. "through back loop") could be expressed generally as ttl (i.e. "through trailing loop").
## To enable options for combination knitting, uncomment all of the lines in this group and make any
## alterations you see fit.
#operation.knit.through-trailing-loop.$$$=k{0}ttl
#operation.purl.through-trailing-loop.$$$=p{0}ttl
#operation.knit.with-yarn.through-trailing-loop.$$$=k{0}ttl ({1})
#operation.purl.with-yarn.through-trailing-loop.$$$=p{0}ttl ({1})
#operation.decrease.k2tog=k2tog-R
#operation.decrease.ssk=k2tog-L
#operation.decrease.p2tog=p2tog-R
#operation.decrease.k2tog-tbl=k2tog-L
#operation.decrease.p2tog-tbl=p2tog-R
#operation.increase.kfb=k 2 sts into next st
#operation.increase.pfb=p 2 sts into next st
#operation.slip-knitwise.$$$=sl {0} twist


## Some people prefer the term "cast off" to "bind off"
## To enable, uncomment all of the lines in this group.
#operation.bind-off.$$$=cast off {0} stitch;cast off {0} stitches
#operation.bind-off.knitwise.$$$=cast off {0} stitch knitwise;cast off {0} stitches knitwise
#operation.bind-off.purlwise.$$$=cast off {0} stitch purlwise;cast off {0} stitches purlwise
#operation.bind-off.with-yarn.$$$=with ''{1}'', cast off {0} stitch;with ''{1}'', cast off {0} stitches
#operation.bind-off.with-yarn.knitwise.$$$=with ''{1}'', cast off {0} stitch knitwise;with ''{1}'', cast off {0} stitches knitwise
#operation.bind-off.with-yarn.purlwise.$$$=with ''{1}'', cast off {0} stitch purlwise;with ''{1}'', cast off {0} stitches purlwise
#operation.bind-off-all=cast off all stitches
#operation.bind-off-all.knitwise=cast off all stitches knitwise
#operation.bind-off-all.purlwise=cast off all stitches purlwise
#operation.bind-off-all.with-yarn=with ''{0}'', cast off all stitches
#operation.bind-off-all.with-yarn.knitwise=with ''{0}'', cast off all stitches knitwise
#operation.bind-off-all.with-yarn.purlwise=with ''{0}'', cast off all stitches purlwise

## You can pluralize the basic knit / purl operations that aren't pluralized by default
## To enable, uncomment all of the lines in this group.
#operation.knit.$$$=k {0} st;k {0} sts
#operation.purl.$$$=p {0} st;p {0} sts
#operation.knit.with-yarn.$$$=k {0} st with yarn {1};k {0} sts with yarn {1}
#operation.purl.with-yarn.$$$=p {0} st with yarn {1};p {0} sts with yarn {1}

## One of the many ways to express a yarn-over increase.
## To enable, uncomment ONE of the lines in this group.
#operation.increase.yo=yon
#operation.increase.yo=yrn
#operation.increase.yo=yfon
#operation.increase.yo=yfrn
#operation.increase.yo=yarn over needle

## Repeats can be indicated by * instead of []s. Be aware that nested repeats may not render correctly.
## To enable, uncomment all of the lines in this group.
#operation.repeat.begin=*
#operation.repeat.end=,
#operation.until.end.with-notation=repeat from * to end
#operation.until.before-end.with-notation.$$$=repeat from * to {0} st before end;repeat from * to {0} sts before end
#operation.until.gap.with-notation=repeat from * to gap
#operation.until.before-gap.with-notation.$$$=repeat from * to {0} st before gap;repeat from * to {0} sts before gap
#operation.until.marker.with-notation=repeat from * to marker
#operation.until.before-marker.with-notation.$$$=repeat from * to {0} st before marker;repeat from * to {0} sts before marker
#operation.until.times.with-notation.$$$=repeat from * {0} time;repeat from * {0} times
